import{_ as i,c as a,a3 as t,o as n}from"./chunks/framework.Ao2Tp7LI.js";const e="/img/1__uCwhJpWZUQVkkXTvVr__m2A.png",l="/img/1__Ehwm4wP05VIXHYL9cOReig.png",c=JSON.parse('{"title":"deget/ddown; a downloader cli/api for dotnet","description":"Hello everyone, I would like to introduce my first global tool for dotnet core ecosystem. This is one of my side projects that I have completed in my free time. It is a downloader just like ‘wget’ command in unix. It has partitioning, pause and resume features. Also, it is not only a CLI tool, but has a nuget package that you can include to your projects for downloading files.","frontmatter":{"layout":"doc","title":"deget/ddown; a downloader cli/api for dotnet","description":"Hello everyone, I would like to introduce my first global tool for dotnet core ecosystem. This is one of my side projects that I have completed in my free time. It is a downloader just like ‘wget’ command in unix. It has partitioning, pause and resume features. Also, it is not only a CLI tool, but has a nuget package that you can include to your projects for downloading files.","date":"2019-01-14T09:10:19.332Z","categories":"Tool","keywords":"dotnet,tool,downloader,wget","thumbnail":"/img/1__uCwhJpWZUQVkkXTvVr__m2A.png"},"headers":[],"relativePath":"posts/deget-ddown-a-downloader-cli-api-for-dotnet.md","filePath":"posts/deget-ddown-a-downloader-cli-api-for-dotnet.md"}'),h={name:"posts/deget-ddown-a-downloader-cli-api-for-dotnet.md"};function p(o,s,k,d,r,g){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="deget-ddown-a-downloader-cli-api-for-dotnet" tabindex="-1">deget/ddown; a downloader cli/api for dotnet <a class="header-anchor" href="#deget-ddown-a-downloader-cli-api-for-dotnet" aria-label="Permalink to &quot;deget/ddown; a downloader cli/api for dotnet&quot;">​</a></h1><p><img src="'+e+`" alt="The blog image"></p><p>Hello everyone, I would like to introduce my first global tool for dotnet core ecosystem. This is one of my side projects that I have completed in my free time. It is a downloader just like ‘wget’ command in unix. It has partitioning, pause and resume features. Also, it is not only a CLI tool, but has a nuget package that you can include to your projects for downloading files.</p><p>Install command</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dotnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DDown</span></span></code></pre></div><p>Example CLI command</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/OpenShot/openshot-qt/releases/download/v2.4.1/OpenShot-v2.4.1-x86</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\_</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">64.dmg</span></span></code></pre></div><p>I have started this project almost a year ago; My curiosity started with “can I do something like ‘free download manager’ in command line just like ‘wget’ command in unix”. I started digging into HTTP protocol documentation. And, I found “Range” option which I didn’t know before. With this option I can divide the file and download it with chucks.</p><p>So, the main idea behind the tool is to request the file information with only header option. After that, calculate the partitions and start download as a stream. I kept the partitions and the history files in user’s LocalApplicationData. Maybe, it can change in future.</p><p>Let’s see results.</p><p>Here is an example run command with four partitions.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [https://github.com/OpenShot/openshot-qt/releases/download/v2.4.1/OpenShot-v2.4.1-x86</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">64.dmg](</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://github.com/OpenShot/openshot-qt/releases/download/v2.4.1/OpenShot-v2.4.1-x86_64.dmg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -p 4</span></span></code></pre></div><p><img src="`+l+`" alt="deget example output"> deget example output</p><p>I think, one of the most useful thing is that CLI downloads the file into current folder in which the command runs. But, if you want to change the download location you can just use -o flag. Also, if you want to download the file into user’s downloads folder you can just use -d flag. For more options,</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-p,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> partition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Default: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Set partition count. Default zero means system’s processor count</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-o,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> folder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> that</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> runs.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-r,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> override</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Default: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Override the lastest download file with same name. Otherwise it will download the file with numbers (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">e.g.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (1).exe, File (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).exe).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-b,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> buffersize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Default: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8192</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Set buffer size.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-t,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Default: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Set timeout parameter in miliseconds.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\-d,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> —</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> downloadFolder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Default: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) The file download location set to User’s download folder.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">—</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Display</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screen.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">—</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Display</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> information.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pos.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Required.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> download</span></span></code></pre></div><p>DDown, API is ready to go, you can easily start with following lines for adding file download feature to your project. And, you can customize your options with DDown.Options class. For more information you can take a look at <a href="https://github.com/alimozdemir/DDown" target="_blank" rel="noreferrer">github</a>.</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DDown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> downloader</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Downloader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> downloader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PrepareAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// status contain information about file. (e.g. Length, IsRangeSupported, PartitionCount)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> downloader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StartAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">downloader.Canceled)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // this method will marge partitions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> downloader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MergeAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Thank you for reading.</p>`,18)]))}const y=i(h,[["render",p]]);export{c as __pageData,y as default};
